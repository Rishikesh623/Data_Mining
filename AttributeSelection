{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOClYfz3koe5oZfO0XfccId",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Rishikesh623/Data_Mining/blob/main/AttributeSelection\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oUx1PYstfMmx"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import math"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('Buy_Computer.csv')"
      ],
      "metadata": {
        "id": "iw6qXLL6hP4W"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def calculate_info(df,class_att):\n",
        "  unique_vals = df[class_att].unique();\n",
        "  info = 0;\n",
        "  for val in unique_vals:\n",
        "    rows = df[df[class_att] == val].shape[0]\n",
        "    info = info - (rows/df.shape[0]) * math.log(rows/df.shape[0], 2)\n",
        "  return info;\n"
      ],
      "metadata": {
        "id": "e4_pgNfQhTz-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "info_D = calculate_info(df,\"Buy_Computer\")\n",
        "print(info_D)  #info(D)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0bZdjGpNjAX8",
        "outputId": "95be48ac-f1ed-4616-f8d4-fb764541386b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9402859586706309\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def select_k_atts(df, class_att, k):\n",
        "    gain_list = []\n",
        "\n",
        "    info_D = calculate_info(df, class_att)\n",
        "\n",
        "    for cols in df.columns:\n",
        "        if cols == class_att:\n",
        "            continue\n",
        "\n",
        "        info_A = 0    #info_A(D)\n",
        "        unique_vals = df[cols].unique()\n",
        "\n",
        "        for val in unique_vals:\n",
        "            new_df = df[df[cols] == val]\n",
        "            rows = new_df.shape[0]\n",
        "            prob = rows / df.shape[0]\n",
        "            info_A += prob * calculate_info(new_df, class_att)\n",
        "\n",
        "        gain = info_D - info_A  #info_gain(A)\n",
        "        print(f\"{cols} : Info_A(D) = {info_A}, Gain(A) = {gain} \")\n",
        "        gain_list.append((cols, gain))\n",
        "\n",
        "    gain_list.sort(key=lambda x: x[1], reverse=True)\n",
        "\n",
        "    k = min(k, len(gain_list))\n",
        "\n",
        "    print(f\"\\nTop {k} attributes based on Information Gain:\\n\")\n",
        "    for i in range(k):\n",
        "        print(gain_list[i])\n"
      ],
      "metadata": {
        "id": "QRdK3I8CjbNy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "select_k_atts(df,\"Buy_Computer\",3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hGe6A0sjqcjY",
        "outputId": "52c5cf4c-7045-488e-8e3f-5124bf5ddf0f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "id : Info_A(D) = 0.0, Gain(A) = 0.9402859586706309 \n",
            "age : Info_A(D) = 0.6935361388961918, Gain(A) = 0.2467498197744391 \n",
            "income : Info_A(D) = 0.9110633930116763, Gain(A) = 0.029222565658954647 \n",
            "student : Info_A(D) = 0.7884504573082896, Gain(A) = 0.15183550136234136 \n",
            "credit_rating : Info_A(D) = 0.8921589282623617, Gain(A) = 0.04812703040826927 \n",
            "\n",
            "Top 3 attributes based on Information Gain:\n",
            "\n",
            "('id', 0.9402859586706309)\n",
            "('age', 0.2467498197744391)\n",
            "('student', 0.15183550136234136)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Wb-bY320tsJU"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}